\section {Задача построения модели криптовалюты}

Как было показано в главе \ref{ch01}, на сегодняшний день разработано большое количество блокчейн-систем. Каждая из этих систем реализует различные наборы функциональностей криптовалюты, причем реализации могут сильно отличаться, равно как и способы, с помощью которых функциональности взаимодействуют друг с другом. Создатели очередной блокчейн-системы зачастую вынуждены решать задачу построения системы «с нуля», опыт коллег может быть использован лишь на уровне заимствования идей, возможности анализа последствий использования этих идей в построенной системе значительно ограничены. В равной степени затруднен и анализ новых идей, желание реализовать которые часто и является отправной точкой для разработки новой системы.

Многие подходы, используемые в блокчейн-системах, опираются на достижения криптографии, использование которых накладывает на разработчика системы ответственность за четкое понимание требований, предъявляемых используемой структурой. То же относятся и к более сложным конструкциям, использующим криптографические примитивы как составную часть. Недостаточное понимание требований, предъявляемых используемыми конструкциями при разработке новых систем может легко привести к проблемам с
безопасностью, производительностью.

Анализ разработанных систем, равно как и работа над дизайном новых значительно осложняется отсутствием формализации функциональностей криптовалюты, описанием способов из объединения в
общую систему. Эти и другие затруднения в разработке дизайна новых блокчейн-систем, равно как и анализе существующих, можно решить посредством формализации понятия криптовалюты, разработки единой абстрактной модели. Функциональности криптовалюты могут быть описаны как составные компоненты разработанной модели.

Отдельно стоит вопрос разработки блокчейн-систем, использующих метод доказательства доли владения. До публикации работ Ouroboros \citep{ouroboros}, Snow White \citep{snowwhite}, Algorand \citep{algorand} в 2016, не было ни одного доказанно безопасного алгоритма консенсуса (эвентуального или полного), использующего метод доказательства доли владения. Для некоторых существовавших на тот момент алгоритмов были применены атаки \citep{bentov-pos}, против которых по утверждению авторов алгоритмов, алгоритмы должны были быть устойчивыми. В отличие от
предшествоваших работ, в Oroboros (который является первым опубликованным доказанно безопасным алгоритмом, использующим метод доказательства доли владения) авторами строится модель среды, в которой формулируется алгоритм и доказывается его устойчивости при работе в данной среде к известным на момент создания работы атакам.

Однако в вопросе построения блокчейн-систем, на сегодняшний день нет работ, предлагающих формальную модель системы, основанной на консенсус-алгоритме, реализующем метод доказательства доли владения, формулизующих свойства модели и доказывающих их. Требуется заметить, что консенсус-алгоритм является в некотором смысле лишь одной из функциональностей криптовалюты и как следствие этого, даже построив систему на основе доказанно безопасного алгоритма консенсуса, ничего нельзя сказать о безопсаности системы в целом.

\subsection{Критерии для построенной модели}

\label{ch01-criteria}

Для того чтобы перейти от обоснования востребованности задачи построения модели криптовалюты, реализующей метод доказательства доли владения, к ее непосредственной формулировке, рассмотрим критерии, которым должна удовлетворять построенная модель, позволяющие эффективно использовать модель в анализе существующих и разработке новых блокчейн-систем (криптовалют в частности).

* Модульность
  * Каждая функциональность должна быть представлена как набор компонент модели, описанных независимо и предъявляющие друг к другу некоторый набор требований.
* Детализированность
  * Всякое сформулированное войство должно быть либо доказано для приведенной конструкции, либо вынесено в требования для компоненты, используемой этой конструкцией.
* Эффективность
  * Для разрабатываемой модели должна быть показана эффективность ее реализации на практике, причем эффективная реализация должна лишь реализовывать требования модели, не изменяя составляющие.
* Безопасность
  * Система, разработанная на основе модели, должна отвечать требованиям безопасности, в частности быть устойчивой к известным атакам.
  * Система, разработанная на основе модели, должна иметь резистентность к взлому одного из используемых в ней криптографических примитивов.

Требование безопасности является особенно важным в разработке надежных финансовых систем (что является одним из освновных применений криптовалют на сегодняшний день).

Требования детализированности и модульности должны облегчить задачу проведения анализа модели, равно и расширения модели новыми компонентами. 

Требование эффективности важно при конструировании модели, игнорирование требования на ранних этапах может привести к получению модели, неприменимой на практике (следовательно, представляющий
малый интерес в вопросе проектирования новых и анализа существующих систем).

\subsection {Существующие попытки построения модели криптовалюты}

Во всех документах, расмотренных в таблице \ref{tbl:coin-specs} приводится техническое описание (разной степени детализации) системы в целом, но ни в одной из них не была предпринята попытка модульного (поэтапного) построения формальной модели. Приведенные же модели, даже в случае достижения высокой степени детализации, слабо подходят для дальнейшего анализа в силу своей
монолитности, большого объема.

Авторы статьи, предлагающей дизайн криптовалюты Tezos (\citep[2.1 Mathematical representation]{tezos-white}) предлагают некоторую математическую нотацию для формирования модульной модели криптовалюты, однако используют ее только для описания понятия глобального состояния и блока как изменения этого состояния (самых базовых понятий), в дальнейшем описании дизайна системы нотация не используется. Авторы технической спецификации Ethereum \citep{eth-yellow} достаточно подробно вводят
формулировки состояния, однако все структуры, равно как и логика валидации, описаны как части одной цельной (и довольно громоздкой) модели, без модульной структуры.

В статьях, посвященных описанию и анализу консенсус алгоритмов (не криптовалют целиком), таких как Ouroboros \citep{ouroboros}, Algorand \citep{algorand}, авторами предлагается только математическая модель консенсус-алгоритма, к остальным компонентам системы предъявляется набор требований (но описание этих компонент выходит за рамки тем данных работ).

В работах A formal model of Bitcoin transactions \citep{btc-tx-model}, Chimeric ledgers \citep{chimeric-ledgers} вводятся формальные модели транзакций, что является лишь частью модели блокчейн-системы.

\subsubsection{Фреймворк Scorex}

Авторы фреймворка Scorex \citep{scorex-gh} поставили своей целью создание модульного фреймворка для прототипирования различных блокчейн-систем. Фреймворк разработан на языке Scala и сопровожден достаточно подробной документацией \citep{scorex-doc}, объясняющей основные концепции, стоящие за фреймворком.
Авторы фреймворка отдельно выделяют транзакционный уровень, уровень консенсуса. Это единственная известная автору попытка построения модели криптовалюты в общем смысле.

Как негативный фактор, в документации описываются только некоторые отдельные компоненты модели. Сведение отдельных компонент в единую модель в документации отсутствует. Код фреймворка на Scala, впрочем может рассматриваться как модель криптовалюты (в достаточно общем смысле). Однако, следует заметить, реализация многих компонент Scorex не является абстрактным обобщением конструкций, но является упрощенной реализацией таковых, позволяющей использовать их в прототипировании других компонент.

\subsubsection{Модели криптовалют с PoS}

Автору неизвестны детальные модели криптовалют, построенные для консенсус-алгоритмов, реализующих метод доказательства доли владения (PoS).

В фреймворке Scorex \citep{scorex-gh} приведена лишь абстрактная модель, без специализации относительно метода PoS. Кроме того, отсутствие последовательной формулировки модели в документации является минусом (код на Scala часто слишком специализирован, чтобы использовать его для построения абстрактной модели, не следующей определениям аналогичным принятым в коде).

Спецификация Ethereum достаточно детальна, но не предлагает модульной модели и кроме того относится к системе, использующей консенсус-алгоритм, реализующий метод доказательства выполнения работы.

Спецификации систем, реализующих метод доказательства доли владения EOS \citep{eos-white}, NEM \citep{nem-white}, Peercoin \citep{ppc-white} не удовлятворяют требованиям детализации. Спецификация криптовалюты NEM выделяется сравнительно полной детализацией, однако авторами не приводится формальная модель. Кроме того, в последующих главах будет указано на несколько несогласованностей в дизайне этой криптовалюты.

