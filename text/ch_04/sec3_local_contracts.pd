\section{Контракты с локальным состоянием}

\label{ch04-loc-contracts}


\begin{definition}{Контракт с локальным состоянием}
 -- умный контракт, область записи которого ограничена некоторой областью общего состояния системы, в которую недоступны чтение и запись для любых других контрактов (и прочих подсистем блокчейн-системы).
\end{definition}

Название контрактов с локальным состоянием отражает их суть: контракт поддерживает некоторое лишь ему доступное состояние, использует его для валидации транзакций. Основное различие с умными контрактами состоит в том, что контракт с локальным состоянием не имеет возможности произвольно изменять общее состояние системы, как следствие все изменения общего состояния должны быть частью объекта изменения транзакции, обрабатываемой контрактом.

Ограничение выразительной мощности умных контрактов достаточно существенно: умный контракт теперь не может, например, инициировать новую денежную транзакцию, его роль сводится исключительно к валидации текущей транзакции, для чего он может произвольно использовать собственное состояние. Однако для реализации абсолютного большинства практических применений умных контрактов (в первую очередь для реализации финансовых контрактов) такое ограничение не является существенным.
Кроме того, строение контракта с локальным состоянием гарантирует то, что все изменения балансов (хранение балансов не относится к локальному состоянию какого-либо из контрактов) будут явно указаны в транзакции, что в реализации финансовых контрактов является плюсом (явно указываются финансовые транзакции, которые будут совершены).

Введение контрактов с локальным состоянием мотивировано в первую очередь желанием применить дополнение транзакции ограниченного вида к умным контрактам. 
Как было рассмотрено в разделе \ref{ch02-expand}, дополнение транзакции ограниченного вида предлагает ряд интересных свойств для эффективной обработки множества транзакций, ассоциированных с умными контрактами.
В частности, использование дополнения транзакции ограниченного вида позволяет обрабатывать множество $N$ транзакций в $O(N)$ потоков, каждый из которых сделает $O(T)$ действий, где $T$ -- максимальное число контрактов, которые потребуется выполнить для дополнения произвольной
транзакции.
Следует заметить, что в случае применения ограничения, многие системы можно моделировать таким образом, чтобы параметр $T$ был равен единице (это в частности верно для системы Ethereum).

Рассмотрим применение дополнения транзакции ограниченного вида к контракту с локальным состоянием. Дополнение транзакции ограниченного вида требует выполнения условия \ref{restrict-expand-many} для множества контрактов -- как было отмечено в разделе \ref{ch04-contracts}, каждый контракт представляет собой функцию дополнение транзакции.
Однако для контрактов с локальным состоянием можно сформулировать более сильное условие \ref{restrict-loc-contracts} (для множества всех контрактов в системе $cs$), которое на самом деле позволяет выполнять дополнение $N$ транзакций в $O(N \cdot T)$ потоков, каждый из которых сделает $O(1)$ операций.

\begin{equation} \label{restrict-loc-contracts}
\begin{split}
& \forall c_i, c_j \in cs
\quad
in \; (c_i) \cap out \; (c_j) = \emptyset
\end{split}
\end{equation}

Следует однако уточнить несколько деталей реализации, касающихся выполнения условия \ref{restrict-loc-contracts}. Условие $in \; (c_i) \cap out \; (c_i) = \emptyset$ выполняется только в том случае, когда контракт не читает из компоненты состояния, в которую производит запись (тогда как именно это контрактам с локальным состоянием и разрешается).

Реализация должна быть устроена таким образом, чтобы операции чтения в дополнении транзакции не производилось. Объект транзакции перед дополнением
`rawTx` вместе с значениями, полученными из состояния, являются единственными параметрами, от которых зависит изменение локального состояния. Доступны функции дополнения контракта и, соответственно, контракт может создать объект изменения состояния для локального сосотояния, воспользовавшись конструктором `Upd (v -> v)` объекта изменения состояния (см. листинг \ref{lst:valueop}) для всех требующих изменения ключей. Непосредственный запуск контракта с вынесением вердикта о валидности транзакции должно произойти несколько позже, в
функции-валидаторе.

Также интересно заметить, что транзакции, использующие скриптовые адреса, представленные в системе Bitcoin \citep{btc}, являются частным случаем контрактов с локальным состоянием, в котором локальное состояние контракта по определению пусто.

\begin{table}[]
\centering
\caption{Сравнение контрактов с локальным состоянием с другими молями контрактов}
\label{contract-comparison}
\begin{tabular}{|l|c|c|c|}
\hline
 & \textbf{Скриптовые} & \textbf{Умные} & \textbf{Контракты} \\
 & \textbf{адреса} & \textbf{контракты} & \textbf{с локальным} \\
 & \textbf{} & \textbf{} & \textbf{состоянием} \\
\hline
 Явное описание                  &           &           &           \\
 финансовых операций             &     +     &     -     &     +      \\
\hline
 Поддержка локального            &           &           &           \\
 состояния                       &     -     &     +     &     +      \\
\hline
 Возможность                     &           &           &          \\
 параллельного исполнения        &     +     &     -     &     +     \\
\hline
\end{tabular}
\end{table}
