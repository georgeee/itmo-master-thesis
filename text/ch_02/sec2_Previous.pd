\section {Существующие попытки построения модели криптовалюты}

Во всех документах, расмотренных в таблице \ref{tbl:coin-specs} приводится техническое описание (разной степени детализации) системы в целом, но ни в одной из них не была предпринята попытка модульного (поэтапного) построения формальной модели. Приведенные же модели, даже в случае достижения высокой степени детализации, слабо подходят для дальнейшего анализа в силу своей
монолитности, большого объёма.

Авторы статьи, предлагающей дизайн криптовалюты Tezos (\citep[2.1 Mathematical representation]{tezos-white}) предлагают некоторую математическую нотацию для формирования модульной модели криптовалюты, однако используют её только для описания понятия глобального состояния и блока как изменения этого состояния (самых базовых понятий), в дальнейшем описании дизайна системы нотация не используется. Авторы технической спецификации Ethereum \citep{eth-yellow} достаточно подробно вводят
формулировки состояния, однако все структуры, равно как и логика валидации, описаны как части одной цельной (и довольно громоздкой) модели, без модульной структуры.

В статьях, посвященных описанию и анализу консенсус алгоритмов (не криптовалют целиком), таких как Ouroboros \citep{ouroboros}, Algorand \citep{algorand}, авторами предлагается только математическая модель консенсус-алгоритма, к остальным компонентам системы предъявляется набор требований (но описание этих компонент выходит за рамки тем данных работ).

\subsection{Фреймворк Scorex}

Авторы фреймворка Scorex \citep{scorex-gh} поставили своей целью создание модульного фреймворка для прототипирования различных блокчейн-систем. Фреймворк разработан на языке Scala и сопровожден достаточно подробной документацией \citep{scorex-doc}, объясняющей основные концепции, стоящие за фреймворком.
Авторы фреймворка отдельно выделяют транзакционный уровень, уровень консенсуса. Это единственная известная автору попытка построения модели криптовалюты в общем смысле.

Как негативный фактор, в документации описываются только некоторые отдельные компоненты модели. Сведение отдельных компонент в единую модель в документации отсутствует. Код фреймворка на Scala, впрочем может рассматриваться как модель криптовалюты (в достаточно общем смысле). Однако, следует заметить, реализация многих компонент Scorex не является абстрактным обобщением конструкций, но является упрощенной реализацией таковых, позволяющей использовать их в прототипировании других компонент.

\subsection{Модели криптовалют с PoS}

Автору неизвестны детальные модели криптовалют, построенные для консенсус-алгоритмов, реализующих метод доказательства доли владения (PoS).

В фреймворке Scorex \citep{scorex-gh} приведена лишь абстрактная модель, без специализации относительно метода PoS. Кроме того, отсутствие последовательной формулировки модели в документации является минусом (код на Scala часто слишком специализирован, чтобы использовать его для построения абстрактной модели, не следующей определениям аналогичным принятым в коде).

Спецификация Ethereum достаточно детальна, но не предлагает модульной модели и кроме того относится к системе, использующей консенсус-алгоритм, реализующий метод доказательства выполнения работы.

Спецификации систем, реализующих метод доказательства доли владения EOS \citep{eos-white}, NEM \citep{nem-white}, Peercoin \citep{ppc-white} не удовлятворяют требованиям детализации. Спецификация криптовалюты NEM выделяется сравнительно полной детализацией, однако авторами не приводится формальная модель. Кроме того, в последующих главах будет указано на несколько несогласованностей в дизайне этой криптовалюты.
