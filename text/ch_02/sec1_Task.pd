\section {Задача построения модели криптовалюты}

Как было показано в главе \ref{ch01}, на сегодняшний день разработано большой количество блокчейн-систем. Каждая из этих систем реализует различные наборы функциональностей криптовалюты, причем реализации могут сильно отличаться, равно как и способы, с помощью которых функциональности взаимодействуют друг с другом. Создатели очередной блокчейн-системы зачастую вынуждены решать задачу построения системы "с нуля", опыт коллег может быть использован лишь на уровне заимствования идей, возможности анализа последствий использования этих идей в построенной системе значительно ограничены. В равной степени затруднен и анализ новых идей, желание реализовать которые часто и является отправной точкой для разработки новой системы.

Многие подходы, используемые в блокчейн-системах, опираются на достижения криптографии, использование которых накладывает на разработчика системы ответственность за четкое понимание требований, предъявляемых используемой структурой. То же относятся и к более сложным конструкциям, использующим криптографические примитивы как составную часть. Недостаточное понимание требований, предъявляемых используемыми конструкциями при разработке новых систем может легко привести к проблемам с
безопасностью, производительностью.

Анализ разработанных систем, равно как и работа над дизайном новых значительно осложняется отсутствием формализации функциональностей криптовалюты, описанием способов из объединения в
общую систему. Эти и другие затруднения в разработке дизайна новых блокчейн-систем, равно как и анализе существующих, можно решить посредством формализации понятия криптовалюты, разработки единой абстрактной модели. Функциональности криптовалюты могут быть описаны как составные компоненты разработанной модели.

Отдельно стоит вопрос разработки блокчейн-систем, использующих метод доказательства доли владения. До публикации работ Ouroboros \citep{ouroboros}, Snow White \citep{snowwhite}, Algorand \citep{algorand} в 2016, не было ни одного доказанно безопасного алгоритма консенсуса (эвентуального или полного), использующего метод доказательства доли владения. Для некоторых существовавших на тот момент алгоритмов были применены атаки \citep{bentov-pos}, против которых по утверждению авторов алгоритмов, алгоритмы должны были быть устойчивыми. В отличие от
предшествоваших работ, в Oroboros (который является первым опубликованным доказанно безопасным алгоритмом, использующим метод доказательства доли владения) авторами строится модель среды, в которой формулируется алгоритм и доказывается его устойчивости при работе в данной среде к известным на момент создания работы атакам.

Однако в вопросе построения блокчейн-систем, на сегодняшний день нет работ, предлагающих формальную модель системы, основанной на консенсус-алгоритме, реализующем метод доказательства доли владения, формулизующих свойства модели и доказывающих их. Требуется заметить, что консенсус-алгоритм является в некотором смысле лишь одной из функциональностей криптовалюты и как следствие этого, даже построив систему на основе доказанно безопасного алгоритма консенсуса, ничего нельзя сказать о безопсаности системы в целом.

\subsection{Критерии для построенной модели}

Для того чтобы перейти от обоснования востребованности задачи построения модели криптовалюты, реализующей метод доказательства доли владения, к её непосредственной формулировке, рассмотрим критерии, которым должна удовлетворять построенная модель, позволяющие эффективно использовать модель в анализе существующих и разработке новых блокчейн-систем (криптовалют в частности):

* Модульность
  * Каждая функциональность должна быть представлена как набор компонент модели, описанных независимо и предъявляющие друг к другу некоторый набор требований.
* Детализированность
  * Всякое сформулированное войство должно быть либо доказано для приведенной конструкции, либо вынесено в требования для компоненты, используемой этой конструкцией.
* Эффективность
  * Для разрабатываемой модели должна быть показана эффективность её реализации на практике, причем эффективная реализация должна лишь реализовывать требования модели, не изменяя составляющие.

Требование эффективности особенно важно потому что ... TODO
