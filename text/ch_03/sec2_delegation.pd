\section{Делегация доли владения}

\label{ch03-delegation}

Делегация доли владения является важным механизмом в алгоритмах консенсуса, реализующих метод доказательства доли владения. Она предоставляет функционал передачи права выпуска блока от одного участника системы другому, позволяя:

* получателю прав выпускать блоки в тех случаях, когда владелец прав имеет право выпуска блока;
* владельцу прав производить манипуляции с его долей владения без каких-либо ограничений, в том числе повторно передавать право выпуска блока (третьему учаcтнику).

Существует два подхода к реализации делегации, которые ведут к двум различающимся типам делегации: легковесной и тяжеловесной, которые будут рассмотрены в соответствующих подразделах.

\subsection{Легковесная делегация}

Легковесная делегация представляет из себя механизм делегации, не требующих хранения каких-либо дополнительных данных в состоянии системы.

В случае когда один участник сети (делегирующий) имеет намерение передать другому участнику (делегату) право выпуска блока, делегирующий участник создаёт специальный объект -- делегационный сертификат, который хранит внутри себя следующую информацию:

* публичный ключ делегирующего;
* публичный ключ делегата;
* значение целочисленного счётчика;
* подпись пары из публичного ключа делегата и значения счётчика ключом делегирующего.

Делегирующий каким-либо образом передаёт сертификат делегату. Когда делегат выпускает блок, используя право выпуска блока делегирующего, делегат вкладывает в доказательство блока сертификат. Участники, проверяющие блок, должны проверить подпись сертификата делегирующим, проверить корректность значения счётчика.

На значение счётчика накладываются следующие ограничения:

* начальное значение счётчика для ключа делегирующего равно $0$;
* каждый последующий сертификат, созданный делегирующим, должен содержать значение счётчика, большее известного на текущий момент системе;
* блок считается некорректным, если к нему приложен сертификат, значение счётчика которого меньше наибольшего использованного в ранее принятых блоках;
* правило сравнения двух цепей должно быть модифицировано таким образом, что если две цепи различаются только последним блоком, оба последних блока созданы с помощью сертификатов, выпущенных одним делегирующим участником, то предпочтение отдаётся блоку с большим значением счётика.

В листинге \ref{lst:light-dlg} представлена реализации легковесной делегации.
Модифицируется конфигурация обобщенного функционала PoS (функция `lightDlgStakeConf`): создатель блока имеет право выпуска блока в том числе если к блоку приложен сертификат, в котором он выступает делегатом, а делегирующий имеет право выпуска блока.
Также модифицируется правило выбора цепи (функция `lightDlgChainComparator`).

\begin{code}[language=Haskell,label=lst:light-dlg,caption={Функционал легковесной делегации}]
data LightDlgCert stId signature =
  LightDlgCert
    { ldcIssuer    :: stId
    , ldcSignature :: signature
    , ldcCounter :: Int
    }

data LightDlgSTag
type LightDlgKV stId = '( stId, Int )

newtype LightDlgToSign stId = LightDlgToSign stId

data LightDlgError stId signature
    = LightDlgCorruptedCert (LightDlgCert stId signature)

lightDlgStakeConf
  :: ( Ord stId
     , Signed stId signature (LightDlgToSign stId)
     , HasPrism proof (LightDlgCert stId signature)
     , HasException e (LightDlgError stId signature)
     , HasCap (StateTag LightDlgSTag) rs
     )
  => Proxy (stId, signature)
  -> StakeConfiguration e mw rs proof stId
  -> StakeConfiguration e mw rs proof stId
lightDlgStakeConf = (..)

lightDlgChainComparator
  :: HasPrism header (LightDlgCert stId signature)
  => ChainComparator header
  -> ChainComparator header
lightDlgChainComparator = (..)
\end{code}

Легковесная делегация не позволяет участникам системы получить доступ к информации о произошедших в системе делегациях (факт делегации перед выпуском блока известен лишь делегирующему и делегату), поскольку не использует состояние системы. Это значительно сужает спектр применения такого типа делегации. Однако легковесная делегация отлично подходит для оперативного менеджмента секретных ключей, в частности для реализации схемы холодного хранилища.

Большинство блокчейн-систем накладывает на участников сети поддерживать узлы сети, выпускающие блоки работающими значительную часть времени. Адреса этих узлов известны другим участникам сети и в случае проведения успешного взлома, секретные ключи, использующиеся для выпуска блоков узлом сети, могут попасть в руки злоумышленника.

Легковесную делегацию можно использовать для решения проблемы следующим образом: участник сети создаёт два секретных ключа: "горячий" ключ `hotKey` и "холодный" ключ `coldKey`. С помощью холодного секретного ключа генерируется сертификат делегации (для делегации права выпуска блока с `hotKey` на `coldKey`), который вместе с горячим секретным ключом устанавливается на узел сети, выпускающий блоки от лица участника. Холодный ключ кладется в некоторое хранилище, предпочтительно без доступа к сети.
Публичная компонента холодного ключа используется для идентификации участника сети. В случае если узел, выпускающий блоки, будет взломан, участник сети сможет с использованием холодного ключа сделегировать право выпуска блока на новый ключ `hotKey2`, запустить новый узел, выпускающий блоки, тем самым полностью нейтрализовав действия злоумышленника.

\subsection{Тяжеловесная делегация}

Тяжеловесная делегация представляет из себя еще один механизм делегаций, значительно отличающийся от легковесной делегации. Тяжеловесная делегация хранит информацию о совершенных делегациях в состоянии системы, что непосредственно приводит к ряду следствий:

* информация о совершенных делегациях доступна всем участникам сети;
* передача права выпуска блока требует проведения транзакции к состоянию;
* есть возможность реализации многоуровневой делегации.

Делегационный сертификат тяжеловесной делегации включает в себя те же данные, что и сертификат легковесной:

* публичный ключ делегирующего;
* публичный ключ делегата либо пометка об отсутствии делегата;
* значение целочисленного счётчика;
* подпись пары из публичного ключа делегата и значения счётчика ключом делегирующего.

Следует заметить, что у делегационного сертификата тяжеловесной делегации может не быть делегата (вместо значения делегата может стоять соответствующая пометка). В этом случае сертификат отменяет передачу права выпуска блока, возвращая его владельцу.

При рассмотрении семантики применения блоков тяжеловесная делегация имеет ряд особенностей по сравнению с легковесной:

* после совершения делегации, делегирующий лишается права выпуска блоков (оно полностью передано делегату);
* сертификат нет нужды прикладывать к созданному блоку, т.к. информация из него уже содержится в состоянии;
* нет нужды модифицировать правило выбора цепи;
* тяжеловесная делегация определяет новый тип транзакции и соответствующий ему валидатор.

Механизм тяжеловесной делегации целесообразно обобщить до многоуровневой делегации


В листинге \ref{lst:dlg-heavy} представлена реализация тяжеловесной делегации.
Модифицируется конфигурация обобщенного функционала PoS (функция `heavyDlgStakeConf`): создатель блока имеет право выпуска блока в том числе если в состоянии есть информация о делегации, в которой он выступает делегатом, а делегирующий имеет право выпуска блока.
Также предоставляется валидатор для проверки транзакции тяжеловесной делегации.

Тяжеловесная делегация создаёт две компоненты состояния, ключом в которых выступает `stId`, значением -- `stId` и `Set stId` соответственно. 

Рассмотрим 

\subsection{Комбинация двух видов делегаций}

Для реализации блокчейн-системы с функциональностью делегации наиболее целесообразно использовать комбинацию двух типов делегации. Легковесная делегация удобна для оперативного менеджмента ключей: замена одного ключа другим производится мгновенно, не налагая дополнительных требований на другие части системы.
Тяжеловесная делегация предоставляет функционал, который отсуствует в легковесной (многоуровневая делегация, согласованность, доступ к информации о делегации для всех участников сети),
однако не позволяя решение задачи оперативного менеджмента ключей (смена делегации требует принятия в блок специальной транзакции, достижения консенсуса об этом блоке участниками сети).

Предлагаемая схема проиллюстрирована на рисунке \ref{img:delegation-both} (легковесная делегация обозначена пунктирной стрелкой): на узлах, выпускающие блоки, сохраняется ключ `hotKey`. Выпускается соответствующий легковесный сертификат, делегирующий право выпуска блока с ключа `coldKey` на ключ `hotKey`. Ключ `coldKey` может храниться в некотором закрытом хранилище и использоваться только при необходимости сменить `hotKey`. В то же время `coldKey` может выступать ключом, на который проихводится делегация тяжеловесного типа с других ключей (кол-во
уровней делегации ограничено только параметром `maxDlgHeight`).

\image{delegation-both}{Комбинация легковесной и тяжеловесной делегаций}
