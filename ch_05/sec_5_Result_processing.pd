\section {Обработка результатов}

В предыдущем разделе было замечено, что для каждого задания по результатам тестирования определяется не более $W_{max}$ победителей.
Существует целое множеств методик агрегации результатов, т.е. позволяющих из полученных посредством краудсорсинга результатов определить варианты-ответа -- "победители".

Самым простым, очевидным методом является выбор победителя по большинству голосов. Т.е. если у нас есть задание с вариантами ответа ${1, 2, 3, 4, 0}$ с распределением голосов ${0, 0.2, 0.4, 0, 0.4}$, победителями будут выбраны варианты ответа $3$, $0$.

Однако помимо голосования большинства, существует целый ряд алгоритмов, решающих задачу агрегации, дающих на выходе значительно более релевантные результаты. В частности авторами бенчмарка SQUARE в работе [@square-paper] было проведено сравнение нескольких таких алгоритмов на нескольких публично доступных датасетах, во всех тестах алгоритмы давали результаты значительно лучшие полученных агрегацией методом большинства.

В настоящей работе было принято решение использовать фреймворк MTsar [@mtsar], в числе многих возможностей которого имеется простое для реализации API для агрегации результатов.

В MTsar представлены следующие алгоритмы агрегации результатов:

* KOS [@kos-paper]
* Метод Давида-Скина [@dawid-skene-paper]
* Zencrowd [@zencrowd-paper]
* Голосования большинства

Алгоритм KOS для решения нашей задачи не подходит, т.к. требует формулировки заданий в виде бинарного множества вариантов ответов. При проведении тестирования было проведено сравнение результатов, предоставляемыми остальными тремя методами агрегации. В результате наилучшие результаты были предоставлены методом Zencrowd. Метод Давида-Скина только для некоторых заданий давал более релерелвантные ответы, для большинства же заданий результаты агрегации более походили на шум, что могло свидетельствовать о
расхождении метода на предоставляемых ему данных (наборы из 159 и 57 заданий с перекрытием 5).

Алгоритм Zencrowd на выходе даёт вектор вероятностей - оценку вероятностей правдоподобия каждого варианта ответа. Этот вектор представляет собой очень ценный источник информации. Например, определяя победителей, разумно было бы выбирать их только среди тех вариантов, в правдоподобии которых алгоритм "достаточно уверен". Как следствие, вместо выбора $W_{max}$ вариантов с максимальными вероятностями, нами было принято решение выбирать варианты с оценкой вероятности не менее $T = 0.4$ (из чего
следует $W_{max} = 2$).
