\section {Рабочий цикл}

Как было замечено в разделе \ref{ch05-pre}, для формирования заданий мы сформулировали для каждого интересующего нас синсета PWN набор из не более чем 15 синсетов-кандидатов. Однако дать пользователю задание с пятнцадцатью вариантами ответов представляется идеей не самой разумной. Чем больше вариантов, тем как правило сложнее среди них определить правильный, и поэтому было решено включать в задание не более пяти вариантов ответа (плюс вариант "ни один не подходит"). Однако, как было замечено в
разделе \ref{ch04-testing}, для 7 синсетов из 100 (на которых проводилось тестирование) первый близкий кандидат был найден далее, чем на пятой позиции. Существует как минимум два варианта решения данного затруднения:

* ограничить число связей пятью --- уменьшить покрытие метода (на 7%)
* рассматривать более пяти связей, разбивая полученное множество кандидатов на несколько заданий меньшего размера

Нами была выбрана вторая опция. Её выбор непосредственно влечет за собой увеличение общего числа заданий, однако как будет показано далее в этом разделе, увеличение происходит в допустимых пределах.

Кроме того, создавая для каждого синсета несколько заданий, у нас появляется необходимость разработать методологию для объединения результатов выполненных заданий, проведения дополнительных этапов тестирования. Такую методологию мы будем называть "рабочим циклом" или просто --- циклом.

Итерацию цикла будем называть раундом. Процесс выравнивания заданного набора синсетов PWN будет состоять из нескольких раундов, на каждом из которых отсекается некоторое количество кандидатов (и при необходимости создаются задания для дополнительной фильтрации "выживших" кандидатов).

Пусть $N_{max}$ --- максимальное количество опций задания, $E_{max}$ --- максимальный размер исходного множества кандидатов. Для каждого синсета $s$ из PWN к первому раунду генерируется $K_s = \frac{\operatorname{min}(E_s, E_{max})}{N_{max}}$ заданий. Множество кандидатов равномерно распределяется между этими $K_s$ заданиями: $i$-й кандидат добавляется в $j$-ое задание, где $j = i \operatorname{mod} K_s$.

После каждого раунда для каждого задания определяется не более $W_{max}$ победителей. Из полученного множества победителей формируются новые задания (посредством объединения победителей различных заданий в новые задания, как кандидатов). Выравнивание считается завершенным, как только для синсета будет определено множество из не более чем $W_{max}$ кандидатов-победителей, полученных из одного задания.
